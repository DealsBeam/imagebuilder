### BEGIN /etc/grub.d/00_header ###
if [ -s $prefix/grubenv ]; then
  set have_grubenv=true
  load_env
fi
if [ "${next_entry}" ] ; then
   set default="${next_entry}"
   set next_entry=
   save_env next_entry
   set boot_once=true
else
   set default="0"
fi

if [ x"${feature_menuentry_id}" = xy ]; then
  menuentry_id_option="--id"
else
  menuentry_id_option=""
fi

export menuentry_id_option

if [ "${prev_saved_entry}" ]; then
  set saved_entry="${prev_saved_entry}"
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi

function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}
function load_video {
  if [ x$feature_all_video_module = xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
}

if [ x$feature_default_font_path = xy ] ; then
   font=unicode
else
insmod part_gpt
insmod ext2
if [ x$feature_platform_search_hint = xy ]; then
  search --no-floppy --fs-uuid --set=root ROOT_UUID
else
  search --no-floppy --fs-uuid --set=root ROOT_UUID
fi
    font="/usr/share/grub/unicode.pf2"
fi

if loadfont $font ; then
  set gfxmode=auto
  load_video
  insmod gfxterm
  set locale_dir=$prefix/locale
  set lang=en_US
  insmod gettext
fi
terminal_output gfxterm
if [ "${recordfail}" = 1 ] ; then
  set timeout=-1
else
  if [ x$feature_timeout_style = xy ] ; then
    set timeout_style=menu
    set timeout=-1
  # Fallback normal timeout code in case the timeout_style feature is
  # unavailable.
  else
    set timeout=-1
  fi
fi
### END /etc/grub.d/00_header ###

### BEGIN /etc/grub.d/05_debian_theme ###
insmod part_gpt
insmod ext2
if [ x$feature_platform_search_hint = xy ]; then
  search --no-floppy --fs-uuid --set=root BOOT_UUID
else
  search --no-floppy --fs-uuid --set=root BOOT_UUID
fi
insmod png
if background_image /grub/desktop-grub.png; then
  set color_normal=white/black
  set color_highlight=black/white
else
  set menu_color_normal=cyan/blue
  set menu_color_highlight=white/blue
fi
### END /etc/grub.d/05_debian_theme ###

### BEGIN /etc/grub.d/10_linux ###
function gfxmode {
	set gfxpayload="${1}"
}
set linux_gfx_mode=
export linux_gfx_mode
menuentry 'Debian GNU/Linux KERNEL_VERSION - samsung galaxy book go' --class debian --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-ROOT_UUID' {
	load_video
	insmod gzio
	if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
	insmod part_gpt
	insmod ext2
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root BOOT_UUID
	else
	  search --no-floppy --fs-uuid --set=root BOOT_UUID
	fi
	echo	'Loading Linux KERNEL_VERSION ...'
	linux	/Image-KERNEL_VERSION root=UUID=ROOT_UUID rootwait ro efi=novamap,noruntime clk_ignore_unused pd_ignore_unused console=tty0 ignore_loglevel fsck.repair=yes net.ifnames=0 ipv6.disable=1 noresume deferred_probe_timeout=30 apparmor=0
	echo	'Loading device-tree' 
	devicetree /dtb-KERNEL_VERSION/sc7180-samsung-galaxy-book-go.dtb
	echo	'Loading initial ramdisk ...'
	initrd	/initrd.img-KERNEL_VERSION
}
menuentry 'Debian GNU/Linux KERNEL_VERSION - acer aspire 1' --class debian --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-ROOT_UUID' {
	load_video
	insmod gzio
	if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
	insmod part_gpt
	insmod ext2
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root BOOT_UUID
	else
	  search --no-floppy --fs-uuid --set=root BOOT_UUID
	fi
	echo	'Loading Linux KERNEL_VERSION ...'
	linux	/Image-KERNEL_VERSION root=UUID=ROOT_UUID rootwait ro efi=novamap,noruntime clk_ignore_unused pd_ignore_unused console=tty0 ignore_loglevel fsck.repair=yes net.ifnames=0 ipv6.disable=1 noresume deferred_probe_timeout=30 apparmor=0
	echo	'Loading device-tree' 
	devicetree /dtb-KERNEL_VERSION/sc7180-acer-aspire1.dtb
	echo	'Loading initial ramdisk ...'
	initrd	/initrd.img-KERNEL_VERSION
}
submenu 'Advanced options for Debian GNU/Linux' $menuentry_id_option 'gnulinux-advanced-ROOT_UUID' {
	menuentry 'Debian GNU/Linux, with Linux KERNEL_VERSION - samsung galaxy book go' --class debian --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-advanced-ROOT_UUID' {
		load_video
		insmod gzio
		if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
		insmod part_gpt
		insmod ext2
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root BOOT_UUID
		else
		  search --no-floppy --fs-uuid --set=root BOOT_UUID
		fi
		echo	'Loading Linux KERNEL_VERSION ...'
		linux	/Image-KERNEL_VERSION root=UUID=ROOT_UUID rootwait ro efi=novamap,noruntime clk_ignore_unused pd_ignore_unused console=tty0 ignore_loglevel fsck.repair=yes net.ifnames=0 ipv6.disable=1 noresume deferred_probe_timeout=30 apparmor=0
		echo	'Loading device-tree'
		devicetree /dtb-KERNEL_VERSION/sc7180-samsung-galaxy-book-go.dtb
		echo	'Loading initial ramdisk ...'
		initrd	/initrd.img-KERNEL_VERSION
	}
	menuentry 'Debian GNU/Linux, with Linux KERNEL_VERSION - acer aspire 1' --class debian --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-advanced-ROOT_UUID' {
		load_video
		insmod gzio
		if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
		insmod part_gpt
		insmod ext2
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root BOOT_UUID
		else
		  search --no-floppy --fs-uuid --set=root BOOT_UUID
		fi
		echo	'Loading Linux KERNEL_VERSION ...'
		linux	/Image-KERNEL_VERSION root=UUID=ROOT_UUID rootwait ro efi=novamap,noruntime clk_ignore_unused pd_ignore_unused console=tty0 ignore_loglevel fsck.repair=yes net.ifnames=0 ipv6.disable=1 noresume deferred_probe_timeout=30 apparmor=0
		echo	'Loading device-tree'
		devicetree /dtb-KERNEL_VERSION/sc7180-acer-aspire1.dtb
		echo	'Loading initial ramdisk ...'
		initrd	/initrd.img-KERNEL_VERSION
	}
	menuentry 'Debian GNU/Linux, with Linux KERNEL_VERSION (recovery mode) - samsung galaxy book go' --class debian --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-recovery-ROOT_UUID' {
		load_video
		insmod gzio
		if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
		insmod part_gpt
		insmod ext2
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root BOOT_UUID
		else
		  search --no-floppy --fs-uuid --set=root BOOT_UUID
		fi
		echo	'Loading Linux KERNEL_VERSION ...'
		linux	/Image-KERNEL_VERSION root=UUID=ROOT_UUID rootwait ro single efi=novamap,noruntime clk_ignore_unused pd_ignore_unused console=tty0 ignore_loglevel fsck.repair=yes net.ifnames=0 ipv6.disable=1 noresume deferred_probe_timeout=30 apparmor=0
		echo	'Loading device-tree'
		devicetree /dtb-KERNEL_VERSION/sc7180-samsung-galaxy-book-go.dtb
		echo	'Loading initial ramdisk ...'
		initrd	/initrd.img-KERNEL_VERSION
	}
	menuentry 'Debian GNU/Linux, with Linux KERNEL_VERSION (recovery mode) - acer aspire 1' --class debian --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-recovery-ROOT_UUID' {
		load_video
		insmod gzio
		if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
		insmod part_gpt
		insmod ext2
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root BOOT_UUID
		else
		  search --no-floppy --fs-uuid --set=root BOOT_UUID
		fi
		echo	'Loading Linux KERNEL_VERSION ...'
		linux	/Image-KERNEL_VERSION root=UUID=ROOT_UUID rootwait ro single efi=novamap,noruntime clk_ignore_unused pd_ignore_unused console=tty0 ignore_loglevel fsck.repair=yes net.ifnames=0 ipv6.disable=1 noresume deferred_probe_timeout=30 apparmor=0
		echo	'Loading device-tree'
		devicetree /dtb-KERNEL_VERSION/sc7180-acer-aspire1.dtb
		echo	'Loading initial ramdisk ...'
		initrd	/initrd.img-KERNEL_VERSION
	}
}

### END /etc/grub.d/10_linux ###

### BEGIN /etc/grub.d/20_linux_xen ###

### END /etc/grub.d/20_linux_xen ###

### BEGIN /etc/grub.d/30_os-prober ###
### END /etc/grub.d/30_os-prober ###

### BEGIN /etc/grub.d/30_uefi-firmware ###
### END /etc/grub.d/30_uefi-firmware ###

### BEGIN /etc/grub.d/40_custom ###
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
### END /etc/grub.d/40_custom ###

### BEGIN /etc/grub.d/41_custom ###
if [ -f  ${config_directory}/custom.cfg ]; then
  source ${config_directory}/custom.cfg
elif [ -z "${config_directory}" -a -f  $prefix/custom.cfg ]; then
  source $prefix/custom.cfg;
fi
### END /etc/grub.d/41_custom ###
